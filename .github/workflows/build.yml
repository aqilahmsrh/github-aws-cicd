name: 'Build, Upload, and Deploy -'

on:
  push:
    branches:
      - main
      - aqilah
  pull_request: 
    branches: 
      - main
      - aqilah

  workflow_dispatch:

#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Repo Tag Name (Ex.: yyyymmdd-hhmmss)'
#         type: string
#         required: true

jobs:
  Build_Upload_Deploy:
    permissions:
      actions: write
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: 'Generate Tag Version'
        id: generate_tag_version
        run: |
          TAG= $(date +%Y%m%d)-$(date +%H%M%S)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Tag Version: $TAG" >> $GITHUB_STEP_SUMMARY

      - name: 'Create Zip File'
        id: create_package
        run: |
          PACKAGE_NAME="${{ steps.generate_tag_version.outputs.tag }}.zip"
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          zip -r $PACKAGE_NAME .

      - name: 'Configure AWS S3 Credentials'
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_BUCKET_REGION }}

      - name: 'Upload to S3 Bucket'
        run: aws s3 cp ${{ steps.create_package.outputs.package_name }} s3://${{ secrets.AWS_S3_BUCKET_NAME }}
  
  Deploy:
    name: Deploy to lambda function
    if: github.event_name == 'pull_request'
    needs: Build_Upload_Deploy
    runs-on: ubuntu-latest
    steps:
      - name: 'Configure AWS Lambda Credentials'
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_LAMBDA_REGION }}

      - name: 'Check S3 Bucket'
        run: |
          aws s3api wait object-exists \
            --bucket ${{ secrets.AWS_S3_BUCKET_NAME }} \
            --key ${{ steps.generate_tag_version.outputs.tag }}.zip \
            --cli-read-timeout 60 \
            --cli-connect-timeout 60
            
      - name: AWS CodeBuild
        if: ${{ success() }}
        uses: aws-actions/aws-codebuild-run-build@v1.0.3
        with:
          project-name: lambda-build-999

#       - name: 'Check Git Tag'
#         if: github.event_name == 'workflow_dispatch'
#         uses: actions/github-script@v6
#         with:
#           script: |
#             const refResponse = await github.rest.git.getRef({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               ref: 'tags/${{ inputs.version }}'
#             });

#       - name: 'Configure AWS Lambda Credentials'
#         uses: aws-actions/configure-aws-credentials@v1-node16
#         with:
#           aws-access-key-id: ${{ secrets.AWS_LAMBDA_USER_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_LAMBDA_USER_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_LAMBDA_REGION }}

#       - name: 'Check S3 Bucket'
#         run: |
#           aws s3api wait object-exists \
#             --bucket ${{ secrets.AWS_S3_BUCKET_NAME }} \
#             --key ${{ steps.generate_tag_version.outputs.tag }}.zip \
#             --cli-read-timeout 60 \
#             --cli-connect-timeout 60

#       - name: 'Update Source Code'
#         run: |
#           echo "Deploy Version: ${{ steps.generate_tag_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
#           echo "Update Lambda Function with ${{ steps.generate_tag_version.outputs.tag }}.zip file" >> $GITHUB_STEP_SUMMARY
#           aws lambda update-function-code \
#             --function-name=${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} \
#             --s3-bucket=${{ secrets.AWS_S3_BUCKET_NAME }} \
#             --s3-key=${{ steps.generate_tag_version.outputs.tag }}.zip \
#             --cli-read-timeout 60 \
#             --cli-connect-timeout 60
